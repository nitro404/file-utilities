var async=require("async"),path=require("path"),fs=require("fs"),md5File=require("md5-file"),utilities=require("extra-utilities"),fileUtilities={getFileInformation:function(filePath,callback){if(!utilities.isFunction(callback))throw new Error("Missing or invalid callback function!");return utilities.isEmptyString(filePath)?callback(new Error("Missing or invalid file path!")):async.waterfall([function(callback){return fs.stat(filePath,function(error,stats){return error?callback(error):callback(null,stats.size)})},function(fileSize,callback){return md5File(filePath,function(error,hash){return error?callback(error):callback(null,fileSize,hash)})}],function(error,fileSize,hash){return error?callback(error):callback(null,{fileSize:fileSize,md5:hash})})},isFileSystemCaseSensitive:function(filePath){utilities.isEmptyString(filePath)&&(filePath=__dirname);var originalStats=fs.statSync(filePath),invertedStats=fs.statSync(path.join(path.dirname(filePath),changeCase.swap(path.basename(filePath))));return utilities.isValid(originalStats)&&utilities.isInvalid(invertedStats)&&originalStats.ino===invertedStats.ino}};module.exports=fileUtilities;